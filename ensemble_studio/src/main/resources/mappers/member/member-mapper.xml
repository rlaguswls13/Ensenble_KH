<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<!-- mapper태그 namespace 속성 mapper 파일들을 구분하지 위한 별칭 -->

	<!-- resultMap : 조회된 Result Set의 컬럼명과 VO 필드명이 일치하지 않을 때 컬럼과 필드를 매핑 시키는 역할을 
		하는 태그 type : 매핑시킬 VO 풀네임(패키지+클래스명) 또는 등록된 별칭 id : resultMap을 구분하는 문자열 -->
	<resultMap type="Member" id="member_rm">
		<!-- 기본키(PK)에 해당하는 컬럼, 필드 매핑 -->
		<id property="memberNo" column="MEMBER_NO" />

		<!-- 기본키 외의 컬럼, 필드 매핑 -->
		<result property="memberId" column="MEMBER_ID" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberNick" column="MEMBER_NICK" />
		<result property="memberImage" column="MEMBER_IMAGE" />
		<result property="memberPhone" column="MEMBER_PHONE" />
		<result property="enrollDate" column="ENROLL_DATE" />
		<result property="memberStatus" column="MEMBER_STATUS" />
		<result property="memberPath" column="MEMBER_PATH" />
		<result property="memberGrade" column="MEMBER_GRADE" />

		<collection property="aniList" column="MEMBER_NO"
			javaType="java.util.ArrayList" ofType="Animal" select="selectAnimal" />

	</resultMap>

	<resultMap type="Animal" id="animal_rm">
		<id property="aniNo" column="ANI_NO" />
		<result property="aniName" column="ANI_NAME" />
		<result property="aniGender" column="ANI_GENDER" />
		<result property="aniType" column="ANI_TYPE" />
		<result property="aniAge" column="ANI_AGE" />
		<result property="aniKg" column="ANI_KG" />
		<result property="memberNo" column="MEMBER_NO" />
	</resultMap>

	<resultMap type="Rv" id="rv_rm">
		<id property="rvNo" column="RV_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="roomNo" column="ROOM_NO" />
		<result property="rvDate" column="RV_DATE" />
		<result property="rvTime" column="RV_TIME" />
		<result property="rvPeople" column="RV_PEOPLE" />
		<result property="rvCars" column="RV_CARS" />
		<result property="rvAnimals" column="RV_ANIMALS" />
		<result property="rvPurpose" column="RV_PURPOSE" />
		<result property="rvEtc" column="RV_ETC" />
		<result property="roomName" column="ROOM_NAME" />
		<result property="roomPrice" column="ROOM_PRICE" />
		<result property="roomDiscount" column="ROOM_DISCOUNT" />

		<collection property="optionList" column="RV_NO"
			javaType="java.util.List" ofType="Option" select="selectOptionList" />
	</resultMap>

	<resultMap type="Option" id="option_rm">
		<id property="optionNo" column="OPTION_NO" />
		<result property="optionName" column="OPTION_NAME" />
		<result property="optionType" column="OPTION_TYPE" />
		<result property="optionPrice" column="OPTION_PRICE" />
	</resultMap>

	<!-- 로그인멤버 예약내역 조회 -->
	<select id="selectRvList" parameterType="_int" resultMap="rv_rm">
		SELECT
		RV_NO, MEMBER_NO, ROOM_NO, RV_DATE, RV_TIME, RV_PEOPLE,
		RV_CARS, RV_ANIMALS,ROOM_NAME, ROOM_PRICE, ROOM_DISCOUNT,RV_PURPOSE,RV_ETC
		FROM RESERVATION
		JOIN STUDIO_ROOM USING(ROOM_NO)
		WHERE MEMBER_NO =
		#{memberNo}
		ORDER BY RV_NO DESC
	</select>

	<!-- 예약내역 조회에 필요한 옵션리스트 조회 -->
	<select id="selectOptionList" parameterType="_int"
		resultMap="option_rm">
		SELECT * FROM RESERVATION_OPTION
		JOIN STUDIO_OPTION USING
		(OPTION_NO)
		WHERE RV_NO = #{rvNo}
	</select>

	<!-- 로그인멤버 반려동물 정보 조회 -->
	<select id="selectAnimal" parameterType="_int"
		resultMap="animal_rm">
		SELECT * FROM ANIMAL WHERE MEMBER_NO = #{memberNo} ORDER BY
		ANI_NO
	</select>

	<!-- 반려동물 정보 삭제 -->
	<delete id="deleteAnimal" parameterType="_int">
		DELETE FROM ANIMAL WHERE
		ANI_NO = #{aniNo}
	</delete>

	<!-- 반려동물 정보 수정에 필요한 정보 조회 -->
	<select id="selectOneAnimal" parameterType="_int"
		resultMap="animal_rm">
		SELECT * FROM ANIMAL WHERE ANI_NO = #{aniNo}
	</select>

	<!-- 반려동물 정보 수정 -->
	<update id="updateAnimal" parameterType="Animal">
		UPDATE ANIMAL SET
		ANI_NAME = #{aniName},
		ANI_GENDER = #{aniGender},
		ANI_TYPE = #{aniType},
		ANI_AGE = #{aniAge},
		ANI_KG = #{aniKg}
		WHERE ANI_NO = #{aniNo}
	</update>

	<!-- 반려동물 정보 추가 -->
	<insert id="insertAnimal" parameterType="Animal" useGeneratedKeys="true">
		<selectKey keyProperty="aniNo" order="BEFORE" resultType="_int">
			SELECT SEQ_ANO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ANIMAL VALUES
		(#{aniNo}, #{aniName}, #{aniGender}, #{aniType}, #{aniAge}, #{aniKg},
		#{memberNo})
	</insert>

	<!-- / -->


	<!-- 일반 로그인 -->
	<select id="login" parameterType="string" resultMap="member_rm">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_STATUS = 'Y'
		AND MEMBER_PATH = 'G'
		AND MEMBER_ID
		= #{memberId}
	</select>

	<!-- 아이디 중복 검사 -->
	<select id="idDupCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_STATUS = 'Y'
		AND MEMBER_ID =
		#{id}
	</select>

	<!-- 회원가입 -->
	<insert id="signUp" parameterType="Member">
		INSERT INTO MEMBER
		VALUES(
		SEQ_MNO.NEXTVAL, #{memberId}, #{memberPw}, #{memberEmail},
		#{memberNick}, DEFAULT, #{memberPhone}, DEFAULT, DEFAULT, 'G',
		DEFAULT)
	</insert>

	<!-- 회원정보수정 -->
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_PHONE = #{memberPhone},
		MEMBER_EMAIL = #{memberEmail},
		MEMBER_NICK = #{memberNick}
		<if test="memberImage != null">
			,MEMBER_IMAGE = #{memberImage}
		</if>
		WHERE MEMBER_NO = #{memberNo}
	</update>


	<!-- 비밀번호 조회 -->
	<select id="selectPassword" parameterType="_int"
		resultType="string">
		SELECT MEMBER_PW FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="changePwd" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_PW = #{memberPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 회원 탈퇴 -->
	<update id="secession" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_STATUS = 'N'
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 회원 이미지 삭제 -->
	<update id="deleteMemberImage" parameterType="_int">
		UPDATE MEMBER SET
		MEMBER_IMAGE = DEFAULT
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 비번 찾기 가입 회원 조회 -->
	<select id="readMember" parameterType="string"
		resultMap="member_rm">
		SELECT * FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>

	<!-- 비번 찾기 임시 비번으로 변경 -->
	<update id="updatePwd">
		UPDATE MEMBER SET MEMBER_PW = #{memberPw}
		WHERE MEMBER_ID = #{memberId}
	</update>

	<!-- 아이디 찾기 조회 -->
	<select id="findId" parameterType="Member" resultType="string">
		SELECT MEMBER_ID FROM MEMBER
		WHERE MEMBER_NICK = #{memberNick}
		AND MEMBER_EMAIL = #{memberEmail}
	</select>

	<!-- 네이버 로그인 -->
	<select id="naverLogin" resultMap="member_rm"
		parameterType="string">
		SELECT * FROM MEMBER
		WHERE MEMBER_STATUS = 'Y'
		AND MEMBER_PATH = #{memberPath}
		AND MEMBER_ID = #{memberId} 
	</select>

	<!-- 네이버 DB에 저장 -->
	<insert id="naverSignUp" parameterType="Member">
		INSERT INTO MEMBER
		VALUES(SEQ_MNO.NEXTVAL, #{memberId}, 'naverpassword',
		#{memberEmail}, #{memberNick}, DEFAULT, #{memberPhone}, DEFAULT,
		DEFAULT, 'S', DEFAULT) 
	</insert>
	
		<select id="selectMember" parameterType="_int" resultMap="member_rm">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_STATUS = 'Y'
		AND MEMBER_NO
		= #{memberNo}
	</select>
	
	<!-- 탈퇴 회원 조회 -->
	<select id="selectSecessionMember" resultType="int">
		SELECT MEMBER_NO FROM MEMBER WHERE MEMBER_STATUS = 'N'
	</select>
	
	
</mapper>
